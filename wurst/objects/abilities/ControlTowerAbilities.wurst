package ControlTowerAbilities

import ChannelAbilityPreset
import ClosureEvents
import OrderIds
import Assets

import PlayerExtension
import LocalObjectIDs
import TooltipsUtils
import AbilityObjEditingUtils


@compiletime function createMoveOrder()
    new ChannelAbilityPreset(ABILITY_ARMY_MOVE, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNMove)
        ..presetTargetTypes(Targettype.POINT)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("W", "Army Move Order")
        ..setCastingTime(1, 0)

@compiletime function createStopOrder()
    new ChannelAbilityPreset(ABILITY_ARMY_STOP, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNStop)
        ..presetTargetTypes(Targettype.NONE)
        ..setNameEnhance("S", "Army Stop Order")
        ..setCastingTime(1, 0)

@compiletime function createHoldOrder()
    new ChannelAbilityPreset(ABILITY_ARMY_HOLD, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNHoldPosition)
        ..presetTargetTypes(Targettype.NONE)
        ..setNameEnhance("E", "Army Hold Order")
        ..setCastingTime(1, 0)

@compiletime function createAttackPointOrder()
    new ChannelAbilityPreset(ABILITY_ARMY_ATTACK, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNAttack)
        ..presetTargetTypes(Targettype.POINT)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("Q", "Army Attack Order")
        ..setCastingTime(1, 0)

@compiletime function createAttackTargetOrder()
    new ChannelAbilityPreset(ABILITY_ARMY_FOCUS, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNAttack)
        ..presetTargetTypes(Targettype.UNIT)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("A", "Army Focus Order")
        ..setCastingTime(1, 0)

@compiletime function createStandByOrder()
    new ChannelAbilityPreset(ABILITY_UNIT_STANDBY, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNCancel)
        ..presetTargetTypes(Targettype.UNIT)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("D", "Unit Standby Order")
        ..setCastingTime(1, 0)
        ..setTargetsAllowed(1, TargetsAllowed.playerunits)

@compiletime function createToggleSpawn()
    new ChannelAbilityPreset(ABILITY_TOGGLE_SPAWN, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNSell)
        ..presetTargetTypes(Targettype.UNIT)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("F", "Unit Toggle Spawn")
        ..setCastingTime(1, 0)
        ..setTargetsAllowed(1, TargetsAllowed.playerunits)

@compiletime function createSetSpawn()
    new ChannelAbilityPreset(ABILITY_SET_SPAWN, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNMassTeleport)
        ..presetTargetTypes(Targettype.UNIT)
        ..presetOption(Option.VISIBLE, true)
        ..presetOption(Option.PHYSICALSPELL, true)
        ..presetOption(Option.UNIVERSALSPELL, true)
        ..setNameEnhance("V", "Unit Set Spawn")
        ..setCastingTime(1, 0)
        ..setTargetsAllowed(1, commaList(
            TargetsAllowed.vulnerable,
            TargetsAllowed.invulnerable,
            TargetsAllowed.structure,
            TargetsAllowed.friend
            ))

@compiletime function createToggleAutoSend()
    new ChannelAbilityPreset(ABILITY_AUTO_SEND, 1, true)
        ..setDummyAbility()
        ..setIconNormal(Icons.bTNSelectUnit)
        ..presetTargetTypes(Targettype.NONE)
        ..presetOption(Option.VISIBLE, true)
        ..setNameEnhance("Z", "Toggle Auto Send")
        ..setCastingTime(1, 0)


function onPoint(unit caster, int orderId, vec2 targetPos)
    let owner = caster.getOwner()

    owner.getArmyHandler()
        ..updateSpawnOrder(orderId, targetPos)
        ..issueOrderById(orderId, targetPos)

function onCast(unit caster, int orderId)
    let owner = caster.getOwner()

    owner.getArmyHandler().issueOrderById(orderId)

function onTargetCast(unit caster, unit target)
    let owner = caster.getOwner()
    let abilId = EventData.getSpellAbilityId()

    // TODO: refactor previous into this switch
    switch abilId
        case ABILITY_TOGGLE_SPAWN
            owner.getUnitSpawner().toggleSpawn(target.getTypeId())
        case ABILITY_SET_SPAWN
            owner.getUnitSpawner().spawningPos = target.getPos()
        case ABILITY_ARMY_FOCUS
            owner.getArmyHandler()
                ..updateSpawnOrder(OrderIds.smart, target)
                ..issueOrderById(OrderIds.smart, target)
        case ABILITY_UNIT_STANDBY
            owner.getArmyHandler().updateOrderGroup(target.getTypeId())


init
    EventListener.onPointCast(ABILITY_ARMY_MOVE, (unit caster, vec2 target) -> onPoint(caster, OrderIds.move, target))
    EventListener.onPointCast(ABILITY_ARMY_ATTACK, (unit caster, vec2 target) -> onPoint(caster, OrderIds.attack, target))

    EventListener.onCast(ABILITY_ARMY_STOP, (unit caster) -> onCast(caster, OrderIds.stop))
    EventListener.onCast(ABILITY_ARMY_HOLD, (unit caster) -> onCast(caster, OrderIds.holdposition))

    EventListener.onTargetCast(ABILITY_UNIT_STANDBY, (unit caster, unit target) -> onTargetCast(caster, target))
    EventListener.onTargetCast(ABILITY_TOGGLE_SPAWN, (unit caster, unit target) -> onTargetCast(caster, target))
    EventListener.onTargetCast(ABILITY_SET_SPAWN, (unit caster, unit target) -> onTargetCast(caster, target))
    EventListener.onTargetCast(ABILITY_ARMY_FOCUS, (unit caster, unit target) -> onTargetCast(caster, target))
