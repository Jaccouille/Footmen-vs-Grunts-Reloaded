package RaceUnitEntity

import UnitEntity
import PlayerExtension
import LinkedList

import LocalObjectIDs

// TODO: Update
let typeIDs = asList(
    'hfoo',
    'ogru',
    UNIT_PRIEST,
    UNIT_KNIGHT,
    UNIT_MORTAR,
    UNIT_FLYING_MACHINE,
    UNIT_GRYPHON_RIDER,
    UNIT_SORCERESS,
    UNIT_SPELL_BREAKER,
    UNIT_SIEGE_ENGINE,
    UNIT_WAR_GOLEM,
    UNIT_HEADHUNTER,
    UNIT_WARLOCK,
    UNIT_SHAMAN,
    UNIT_WITCH_DOCTOR,
    UNIT_RAIDER,
    UNIT_TAUREN,
    UNIT_DEMOLISHER,
    UNIT_WIND_RIDER,
    UNIT_KODO_BEAST,
    UNIT_OGRE
)

public class RaceUnitEntity extends UnitEntity
    construct(unit whichUnit)
        super(whichUnit)

    override function postCreate()
        super.postCreate()
        if getUnit().getOwner().getUnitSpawner() != null
            getUnit().getOwner().getUnitSpawner().updateUnitCounter(this.getUnit().getTypeId(), 1)

    override function postDeath()
        super.postDeath()
        getUnit().getOwner().getUnitSpawner().updateUnitCounter(this.getUnit().getTypeId(), -1)

init
    typeIDs.forEach() (int typeID) ->
        RaceUnitEntity.register(typeID, target -> new RaceUnitEntity(target))
