package RaceUnitEntity

import BountifulUnitEntity
import PlayerExtension
import LinkedList

import IDListConstant

// TODO: Update
let typeIDs = new LinkedList<int>
..addAll(HUMAN_UNITS)
..addAll(ORC_UNITS)
..addAll(NIGHT_ELF_UNITS)
..addAll(UNDEAD_UNITS)

let battlefield_reg = CreateRegion()..addRect(gg_rct_battlefield)

public class RaceUnitEntity extends BountifulUnitEntity
    construct(unit whichUnit)
        super(whichUnit)

    override function postCreate()
        super.postCreate()
        if getUnit().getOwner().getUnitSpawner() != null
            and getUnit().isInRegion(battlefield_reg)
            getUnit().getOwner().getUnitSpawner().updateUnitCounter(this.getUnit(), 1)

    override function postDeath()
        super.postDeath()
        if getUnit().isInRegion(battlefield_reg)
            getUnit().getOwner().getUnitSpawner().updateUnitCounter(this.getUnit(), -1)

init
    typeIDs.forEach() (int typeID) ->
        RaceUnitEntity.register(typeID, target -> new RaceUnitEntity(target))
