package UnitSpawnData

import HashMap
import ClosureEvents

import PlayerExtension
import LocalObjectIDs


public let spawnDataConstant = new IterableMap<int, integer>()
    ..put(UNIT_FOOTMAN        , 18)
    ..put(UNIT_RIFLEMAN       , 12)
    ..put(UNIT_PRIEST         , 12)
    ..put(UNIT_KNIGHT         , 12)
    ..put(UNIT_MORTAR         , 12)
    ..put(UNIT_FLYING_MACHINE , 12)
    ..put(UNIT_GRYPHON_RIDER  , 12)
    ..put(UNIT_SORCERESS      , 12)
    ..put(UNIT_SPELL_BREAKER  , 12)
    ..put(UNIT_SIEGE_ENGINE   , 12)
    ..put(UNIT_WAR_GOLEM      , 12)

    ..put(UNIT_SENTRY           , 18)
    ..put(UNIT_ARCHER           , 12)
    ..put(UNIT_HUNTRESS         , 12)
    ..put(UNIT_HYPPO_RIDER      , 12)
    ..put(UNIT_GLAIVE_THROWER   , 12)
    ..put(UNIT_DRUID_TALON      , 12)
    ..put(UNIT_DRUID_CLAW       , 12)
    ..put(UNIT_DRYAD            , 12)
    ..put(UNIT_CHIMAERA         , 12)
    ..put(UNIT_MOUNTAIN_GIANT   , 12)
    ..put(UNIT_ANCIENT_PROTECTOR, 12)
    ..put(UNIT_WARDEN           , 12)

    ..put(UNIT_GRUNT       , 18)
    ..put(UNIT_HEADHUNTER  , 12)
    ..put(UNIT_WARLOCK     , 12)
    ..put(UNIT_SHAMAN      , 12)
    ..put(UNIT_WITCH_DOCTOR, 12)
    ..put(UNIT_RAIDER      , 12)
    ..put(UNIT_TAUREN      , 12)
    ..put(UNIT_DEMOLISHER  , 12)
    ..put(UNIT_WIND_RIDER  , 12)
    ..put(UNIT_KODO_BEAST  , 12)
    ..put(UNIT_OGRE        , 12)

    ..put(UNIT_GHOUL           , 18)
    ..put(UNIT_CRYPT_FIEND     , 12)
    ..put(UNIT_FROST_ARCHER    , 12)
    ..put(UNIT_SKELETAL_ORC    , 12)
    ..put(UNIT_GARGOYLE        , 12)
    ..put(UNIT_ZOMBIE          , 12)
    ..put(UNIT_MEAT_WAGON      , 12)
    ..put(UNIT_NECROMANCER     , 12)
    ..put(UNIT_OBSIDIAN_STATUE , 12)
    ..put(UNIT_DESTROYER       , 12)
    ..put(UNIT_FROST_WYRM      , 12)
    ..put(UNIT_ABOMINATION     , 12)
    ..put(UNIT_MAIDEN          , 12)


function addToTemplateSpawner(int unitId, int count, player owner)
    for i = 1 to count
        // Refund unit if max cap is reached
        if owner.getUnitSpawner().countTemplateUnitId(unitId) >= spawnDataConstant.get(unitId)
            // TODO: Should gray out icon, not remove it
            SetPlayerTechMaxAllowed(owner, unitId, 0)
            owner.addGold(GetUnitPointValueByType(unitId))
            break
        else
            owner.getUnitSpawner().addUnitSpawner(unitId)

function enableTrainingListener(int unitId)
    EventListener.add(EVENT_PLAYER_UNIT_TRAIN_FINISH) ->
        let trainer = EventData.getTriggerUnit()
        let trained = EventData.getTrainedUnit()
        let owner = trainer.getOwner()

        if unitId == trained.getTypeId()
            trained.remove()
            addToTemplateSpawner(unitId, 1, owner)

public function initSpawnData()
    for key in spawnDataConstant
        enableTrainingListener(key)
    addToTemplateSpawner(UNIT_FOOTMAN, 12, players[0])
