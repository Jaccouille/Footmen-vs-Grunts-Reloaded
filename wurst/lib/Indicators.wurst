package Indicators

// Standard-library imports:
import HashMap
import LinkedList

// Local imports:
import LocalObjectIDs

public interface Callback
    function run(unit target)

// A mapping of IDs from indicator units to actual units.
public let indicators = new IterableMap<int, int>()
    ..put('haro', UNIT_ALLIANCE_CAPITAL)
    ..put('hcas', UNIT_ALLIANCE_CASTLE)
    ..put('hars', UNIT_HUMAN_TRAINING_CENTER)
    ..put('hbla', UNIT_HUMAN_UPGRADE_CENTER)
    ..put('edos', UNIT_NELF_TRAINING_CENTER)
    ..put('edob', UNIT_NELF_UPGRADE_CENTER)
    ..put('nnsa', UNIT_NAGA_TRAINING_CENTER)
    ..put('nnsg', UNIT_NAGA_UPGRADE_CENTER)
    ..put('nshr', UNIT_HORDE_CAPITAL)
    ..put('ofrt', UNIT_HORDE_CASTLE)
    ..put('osld', UNIT_ORC_TRAINING_CENTER)
    ..put('ofor', UNIT_ORC_UPGRADE_CENTER)
    ..put('utod', UNIT_UNDEAD_TRAINING_CENTER)
    ..put('ugrv', UNIT_UNDEAD_UPGRADE_CENTER)
    ..put('h01L', UNIT_BASIC_TOWER)
    ..put('hgtw', UNIT_ALLIANCE_BASIC_TOWER)
    ..put('owtw', UNIT_HORDE_BASIC_TOWER)
    ..put('h000', UNIT_CONTROL_TOWER)


public let indicatorCallbacks = new IterableMap<int, LinkedList<Callback>>()

public function registerIndicator(int originID, int targetID)
    indicators.put(originID, targetID)

public function registerCallback(int targetID, Callback cb)
    // Look up the list of callbacks for the given type.
    var list = indicatorCallbacks.get(targetID)

    // Build a default element, as necessary.
    if list == null
        // Create a new list.
        list = new LinkedList<Callback>()

        // Register the list for later user.
        indicatorCallbacks.put(targetID, list)

    // Register the callback.
    list.add(cb)
